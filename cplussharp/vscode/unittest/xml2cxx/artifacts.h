#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.7.3081.0.
// 
using namespace System::Xml::Serialization;
using namespace System;
ref class repository;
ref class mappings;
ref class rule;
ref class properties;
ref class properties1;
ref class __identifier(property);
ref class artifacts;
ref class artifact;


/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(Namespace=L"", IsNullable=false)]
public ref class repository : public properties {
    
    private: mappings^  mappingsField;
    
    private: artifacts^  artifactsField;
    
    private: System::String^  nameField;
    
    private: System::String^  typeField;
    
    private: System::String^  versionField;
    
    /// <remarks/>
    public: property mappings^  mappings {
        mappings^  get();
        System::Void set(mappings^  value);
    }
    
    /// <remarks/>
    public: property artifacts^  artifacts {
        artifacts^  get();
        System::Void set(artifacts^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"NCName")]
    property System::String^  name {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute]
    property System::String^  type {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"integer")]
    property System::String^  version {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(Namespace=L"", IsNullable=false)]
public ref class mappings {
    
    private: cli::array< rule^  >^  ruleField;
    
    private: System::String^  sizeField;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlElementAttribute(L"rule")]
    property cli::array< rule^  >^  rule {
        cli::array< rule^  >^  get();
        System::Void set(cli::array< rule^  >^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"integer")]
    property System::String^  size {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(Namespace=L"", IsNullable=false)]
public ref class rule {
    
    private: System::String^  filterField;
    
    private: System::String^  outputField;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute]
    property System::String^  filter {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute]
    property System::String^  output {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code")]
public ref class properties {
    
    private: properties1^  properties1Field;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlElementAttribute(L"properties")]
    property properties1^  properties1 {
        properties1^  get();
        System::Void set(properties1^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(L"properties", Namespace=L"", IsNullable=false)]
public ref class properties1 {
    
    private: cli::array< __identifier(property)^  >^  propertyField;
    
    private: System::String^  sizeField;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlElementAttribute(L"property")]
    property cli::array< __identifier(property)^  >^  property {
        cli::array< __identifier(property)^  >^  get();
        System::Void set(cli::array< __identifier(property)^  >^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"integer")]
    property System::String^  size {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(Namespace=L"", IsNullable=false)]
public ref class __identifier(property) {
    
    private: System::String^  nameField;
    
    private: System::String^  valueField;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"NCName")]
    property System::String^  name {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"integer")]
    property System::String^  value {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(Namespace=L"", IsNullable=false)]
public ref class artifacts {
    
    private: cli::array< artifact^  >^  artifactField;
    
    private: System::String^  sizeField;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlElementAttribute(L"artifact")]
    property cli::array< artifact^  >^  artifact {
        cli::array< artifact^  >^  get();
        System::Void set(cli::array< artifact^  >^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"integer")]
    property System::String^  size {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"xsd", L"4.7.3081.0"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::XmlTypeAttribute(AnonymousType=true), 
System::Xml::Serialization::XmlRootAttribute(Namespace=L"", IsNullable=false)]
public ref class artifact : public properties {
    
    private: System::String^  classifierField;
    
    private: System::String^  idField;
    
    private: System::String^  versionField;
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"NCName")]
    property System::String^  classifier {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute]
    property System::String^  id {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: [System::Xml::Serialization::XmlAttributeAttribute(DataType=L"NMTOKEN")]
    property System::String^  version {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};


inline mappings^  repository::mappings::get() {
    return this->mappingsField;
}
inline System::Void repository::mappings::set(mappings^  value) {
    this->mappingsField = value;
}

inline artifacts^  repository::artifacts::get() {
    return this->artifactsField;
}
inline System::Void repository::artifacts::set(artifacts^  value) {
    this->artifactsField = value;
}

inline System::String^  repository::name::get() {
    return this->nameField;
}
inline System::Void repository::name::set(System::String^  value) {
    this->nameField = value;
}

inline System::String^  repository::type::get() {
    return this->typeField;
}
inline System::Void repository::type::set(System::String^  value) {
    this->typeField = value;
}

inline System::String^  repository::version::get() {
    return this->versionField;
}
inline System::Void repository::version::set(System::String^  value) {
    this->versionField = value;
}


inline cli::array< rule^  >^  mappings::rule::get() {
    return this->ruleField;
}
inline System::Void mappings::rule::set(cli::array< rule^  >^  value) {
    this->ruleField = value;
}

inline System::String^  mappings::size::get() {
    return this->sizeField;
}
inline System::Void mappings::size::set(System::String^  value) {
    this->sizeField = value;
}


inline System::String^  rule::filter::get() {
    return this->filterField;
}
inline System::Void rule::filter::set(System::String^  value) {
    this->filterField = value;
}

inline System::String^  rule::output::get() {
    return this->outputField;
}
inline System::Void rule::output::set(System::String^  value) {
    this->outputField = value;
}


inline properties1^  properties::properties1::get() {
    return this->properties1Field;
}
inline System::Void properties::properties1::set(properties1^  value) {
    this->properties1Field = value;
}


inline cli::array< __identifier(property)^  >^  properties1::property::get() {
    return this->propertyField;
}
inline System::Void properties1::property::set(cli::array< __identifier(property)^  >^  value) {
    this->propertyField = value;
}

inline System::String^  properties1::size::get() {
    return this->sizeField;
}
inline System::Void properties1::size::set(System::String^  value) {
    this->sizeField = value;
}


inline System::String^  property::name::get() {
    return this->nameField;
}
inline System::Void property::name::set(System::String^  value) {
    this->nameField = value;
}

inline System::String^  property::value::get() {
    return this->valueField;
}
inline System::Void property::value::set(System::String^  value) {
    this->valueField = value;
}


inline cli::array< artifact^  >^  artifacts::artifact::get() {
    return this->artifactField;
}
inline System::Void artifacts::artifact::set(cli::array< artifact^  >^  value) {
    this->artifactField = value;
}

inline System::String^  artifacts::size::get() {
    return this->sizeField;
}
inline System::Void artifacts::size::set(System::String^  value) {
    this->sizeField = value;
}


inline System::String^  artifact::classifier::get() {
    return this->classifierField;
}
inline System::Void artifact::classifier::set(System::String^  value) {
    this->classifierField = value;
}

inline System::String^  artifact::id::get() {
    return this->idField;
}
inline System::Void artifact::id::set(System::String^  value) {
    this->idField = value;
}

inline System::String^  artifact::version::get() {
    return this->versionField;
}
inline System::Void artifact::version::set(System::String^  value) {
    this->versionField = value;
}
