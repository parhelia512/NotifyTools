name: windows-x64-cpu-vs2019
on: [push, pull_request]
jobs:
  windows-vs2019-sse2:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: install wget unzip curl jq tar
      run: |
        choco install Wget
        choco install unzip
        choco install curl
        choco install jq
        choco install activeperl
        choco install nasm
    - name: cache-openssl
      id: cache-openssl
      uses: actions/cache@v1
      with:
        path: "openssl-1.1.1i/installw"
        key: openssl-win64-install-1
    - name: openssl-vs2019
      if: steps.cache-openssl.outputs.cache-hit != 'true'
      run: |
        wget https://www.openssl.org/source/openssl-1.1.1i.tar.gz | Out-Null
        tar xvzf openssl-1.1.1i.tar.gz | Out-Null
        cd openssl-1.1.1i/
        perl configure VC-WIN64A --prefix=%CD%\installw no-asm 
        cmd /c '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && nmake'
        cmd /c '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && nmake install'
    # - name: cache-boost
    #   id: cache-boost
    #   uses: actions/cache@v1
    #   with:
    #     path: "cplussharp/vscode/test/boost-install"
    #     key: boost-win64-install-1
    # - name: boost
    #   if: steps.cache-boost.outputs.cache-hit != 'true'
    #   run: |
    #     # cmd /c rmdir cplussharp\vscode\test\boost-install /s /q
    #     wget https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.zip  | Out-Null
    #     unzip boost_1_75_0.zip | Out-Null
    #     cd boost_1_75_0  
    #     #cmake .. -G "Visual Studio 16 2019" -DTARGET="windows"
    #     #cmake --build . --config Release
    #     .\bootstrap.bat
    #     # .\b2.exe -j5 --with-date_time --with-filesystem --with-system --with-thread --with-regex link=static runtime-link=static
    #     #.\b2.exe install --toolset=msvc-14.2 address-model=64 --without-python --build-type=complete --prefix="..\cplussharp\vscode\test\boost-install"   link=static runtime-link=static threading=multi  release
    #     # .\b2.exe install --toolset=msvc-14.2 address-model=64 --without-python  --build-type=complete --prefix="$env:GITHUB_WORKSPACE\cplussharp\vscode\test\boost-install"  link=static runtime-link=shared  threading=multi debug release
    #     ./b2 -j2  install   address-model=64   --prefix="$env:GITHUB_WORKSPACE\cplussharp\vscode\test\boost-install"   link=static runtime-link=static  threading=multi debug release  

    - name: git
      run:  |
        git clone https://github.com/log4cplus/log4cplus      submodules/log4cplus
        git clone https://github.com/google/googletest  submodules/googletest
        git clone https://github.com/yhirose/cpp-httplib submodules/cpp-httplib
        git clone https://github.com/nothings/stb submodules/stb_image
        git clone https://github.com/gabime/spdlog submodules/spdlog
        git submodule update --init  --recursive
    # - name: cache-protobuf
    #   id: cache-protobuf
    #   uses: actions/cache@v1
    #   with:
    #     path: "protobuf-install"
    #     key: protobuf-windows-install
    #- name: protobuf
    #  if: steps.cache-protobuf.outputs.cache-hit != 'true'
    #  run: |
    #    Invoke-WebRequest -Uri https://github.com/protocolbuffers/protobuf/archive/v3.11.2.zip -OutFile protobuf-3.11.2.zip
    #    7z x ./protobuf-3.11.2.zip
    #    cd protobuf-3.11.2
    #    mkdir build-vs2019; cd build-vs2019; cmake -DCMAKE_INSTALL_PREFIX="$env:GITHUB_WORKSPACE\protobuf-install" -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF -DNCNN_BUILD_TESTS=ON ../cmake
    #    cmake --build . --config Release -j 2
    #    cmake --build . --config Release --target install
    # - name: configure
    #   run: |
    #     cd ./cplussharp/vscode/test ; mkdir build; cd build
    #     set BOOST_ROOT="$env:GITHUB_WORKSPACE\cplussharp\vscode\test\boost-install"
    #     cmake -DBOOST_ROOT="$env:GITHUB_WORKSPACE\cplussharp\vscode\test\boost-install"  -DBoost_INCLUDE_DIR="$env:GITHUB_WORKSPACE\cplussharp\vscode\test\boost-install\include\boost-1_75" ..
    # - name: build
    #   run: cd ./cplussharp/vscode/test ; cmake --build build --config Release
    - name: configure
      run: |
        mkdir build; cd build
        cmake ..
    - name: build
      run: cmake --build build --config Release
    #- name: test
    #  run: cd ./cplussharp/vscode/test ; cd build; ctest -C Release --output-on-failure -j 2

  
