name: windows-x64-cpu-vs2019
on: [push, pull_request]
jobs:
  windows-vs2019-sse2:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: install wget unzip curl jq
      run: |
        choco install Wget
        choco install unzip
        choco install curl
        choco install jq
    - name: get boost
      run: |
        wget https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.zip
    - name: build boost
      run: |
        unzip boost_1_72_0.zip
        cd boost_1_72_0 ; mkdir build ; cd build
        cmake .. -G "Visual Studio 16 2019" -DTARGET="windows"
        cmake --build . --config Release
    - name: git
      run: cd ./cplussharp/vscode/test && git submodule update --init  --recursive
    - name: cache-protobuf
      id: cache-protobuf
      uses: actions/cache@v1
      with:
        path: "protobuf-install"
        key: protobuf-windows-install
    #- name: protobuf
    #  if: steps.cache-protobuf.outputs.cache-hit != 'true'
    #  run: |
    #    Invoke-WebRequest -Uri https://github.com/protocolbuffers/protobuf/archive/v3.11.2.zip -OutFile protobuf-3.11.2.zip
    #    7z x ./protobuf-3.11.2.zip
    #    cd protobuf-3.11.2
    #    mkdir build-vs2019; cd build-vs2019; cmake -DCMAKE_INSTALL_PREFIX="$env:GITHUB_WORKSPACE\protobuf-install" -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF -DNCNN_BUILD_TESTS=ON ../cmake
    #    cmake --build . --config Release -j 2
    #    cmake --build . --config Release --target install
    - name: configure
      run: |
        cd ./cplussharp/vscode/test ; mkdir build; cd build
        cmake -DProtobuf_INCLUDE_DIR="$env:GITHUB_WORKSPACE\protobuf-install\include" -DProtobuf_LIBRARIES="$env:GITHUB_WORKSPACE\protobuf-install\lib\libprotobuf.lib" -DProtobuf_PROTOC_EXECUTABLE="$env:GITHUB_WORKSPACE\protobuf-install\bin\protoc.exe" -DNCNN_RUNTIME_CPU=OFF -DNCNN_AVX2=OFF -DNCNN_BUILD_TESTS=ON ..
    - name: build
      run: cd ./cplussharp/vscode/test ; cmake --build build --config Release -j 2
    #- name: test
    #  run: cd ./cplussharp/vscode/test ; cd build; ctest -C Release --output-on-failure -j 2

  
