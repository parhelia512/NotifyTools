name: linux-aarch64-cpu-gcc
on: [push, pull_request]
jobs:
  linux-gcc:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: qemu
      run: sudo apt-get install  curl wget
    - name: aarch64-gnu-toolchain
      run: |
        sudo apt-get update
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt update
        sudo apt install gcc-10 g++-10 
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 60 --slave /usr/bin/g++ g++ /usr/bin/g++-10
    - name: cache-qt-src
      id: cache-qt-src
      uses: actions/cache@v1
      with:
        path: "qt-everywhere-src-5.14.2"
        key: qt-src
    - name: qt5
      if: steps.cache-qt-src.outputs.cache-hit != 'true'
      run: |
        wget https://mirror.tuna.tsinghua.edu.cn/qt/archive/qt/5.14/5.14.2/single/qt-everywhere-src-5.14.2.zip >/dev/null 2>&1
        unzip qt-everywhere-src-5.14.2.zip >/dev/null 2>&1
    - name: cache-openssl
      id: cache-openssl
      uses: actions/cache@v1
      with:
        path: openssl-1.1.1i/install
        key: openssl-aarch64-install
    - name: openssl-aarch64
      if: steps.cache-openssl.outputs.cache-hit != 'true'
      run: |
        wget https://www.openssl.org/source/openssl-1.1.1i.tar.gz >/dev/null 2>&1
        tar xvzf openssl-1.1.1i.tar.gz >/dev/null 2>&1
        cd openssl-1.1.1i/
        ./Configure linux-aarch64 --prefix=$PWD/install no-asm shared no-async  --cross-compile-prefix=aarch64-linux-gnu-
        make -j4
        make install
    # - name: git
    #   run: git submodule update --init  --recursive
    # - name: cache-qemu
    #   id: cache-qemu
    #   uses: actions/cache@v1
    #   with:
    #     path: qemu-install
    #     key: qemu-aarch64-install-1
    # - name: checkout-qemu
    #   if: steps.cache-qemu.outputs.cache-hit != 'true'
    #   uses: actions/checkout@v2
    #   with:
    #     repository: qemu/qemu
    #     path: qemu
    #     ref: 8746309137ba470d1b2e8f5ce86ac228625db940
    # - name: qemu
    #   if: steps.cache-qemu.outputs.cache-hit != 'true'
    #   run: |
    #     cd qemu
    #     ./configure --prefix=install --target-list=aarch64-linux-user --disable-system
    #     make -j2
    #     make install
    #     cp -r aarch64-linux-user/install $GITHUB_WORKSPACE/qemu-install

    # - name: aarch64-gnu-toolchain
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install g++-aarch64-linux-gnu
    # - name: cache-boost
    #   id: cache-boost
    #   uses: actions/cache@v1
    #   with:
    #     path: "cplussharp/vscode/test/boost-install-aarch64"
    #     key: boost-aarch64-install-1
    
    # - name: boost
    #   # if: steps.cache-boost.outputs.cache-hit != 'true'
    #   run: |
    #     wget https://dl.bintray.com/boostorg/release/1.75.0/source/boost_1_75_0.zip >/dev/null 2>&1
    #     unzip boost_1_75_0.zip >/dev/null 2>&1
    #     cd boost_1_75_0  && ./bootstrap.sh && echo  "using gcc : arm64 : aarch64-linux-gnu-g++ ; " >>  project-config.jam &&  ./b2   install  architecture=arm  address-model=64 --without-python  --prefix=${GITHUB_WORKSPACE}/cplussharp/vscode/test/boost-install-aarch64    link=static runtime-link=static  threading=multi --toolset=gcc-arm64
    # - name: configure
    #   run: |
    #     export BOOST_ROOT="${GITHUB_WORKSPACE}/cplussharp/vscode/test/boost-install" 
    #     cd ./cplussharp/vscode/test && mkdir build && cd build && cmake -DBOOST_ROOT="${GITHUB_WORKSPACE}/cplussharp/vscode/test/boost-install-aarch64"   -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc  -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++  ..
    # - name: build
    #   run: cd ./cplussharp/vscode/test && cmake --build build -j 2

    # - name: cache-googletest
    #   id: cache-googletest
    #   uses: actions/cache@v1
    #   with:
    #     path: "googletest"
    #     key: googletest
    # - name: googletest-git
    #   if: steps.cache-googletest.outputs.cache-hit != 'true'
    #   run: |
    #     git clone https://github.com/google/googletest
    # - name: googletest     
    #   run: |
    #     cd googletest
    #     cd build && cmake  -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc  -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ ..
    #     cmake --build . -j 2
    #     sudo make install

    - name: cache-submodules
      id: cache-submodules
      uses: actions/cache@v1
      with:
        path: "submodules"
        key: submodules-win64-install-1
    - name: git
      if: steps.cache-submodules.outputs.cache-hit != 'true'
      run: |    
        git clone https://github.com/log4cplus/log4cplus      submodules/log4cplus
        git clone https://github.com/google/googletest  submodules/googletest
        git clone https://github.com/yhirose/cpp-httplib submodules/cpp-httplib
        git clone https://github.com/nothings/stb submodules/stb_image
        git clone https://github.com/gabime/spdlog submodules/spdlog
        cd submodules/log4cplus
        git submodule update --init  --recursive
    - name: configure
      run: |               
        mkdir build-aarch64 && cd build-aarch64 && cmake  -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc  -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++     ..
    - name: build
      run: cmake --build build-aarch64  
    #- name: test
    #  run: |
    #    export PATH=$GITHUB_WORKSPACE/qemu-install/bin:$PATH
    #    cd ./cplussharp/vscode/test && cd build
    #    TESTS_EXECUTABLE_LOADER=qemu-aarch64 TESTS_EXECUTABLE_LOADER_ARGUMENTS="-L;/usr/aarch64-linux-gnu" ctest --output-on-failure -j 2
    ## mkdir build-aarch64 && cd build-aarch64 && cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/aarch64-linux-gnu.toolchain.cmake       -DHTTPLIB_REQUIRE_OPENSSL=OFF  -DOPENSSL_ROOT_DIR=${CMAKE_SOURCE_DIR}/openssl-1.1.1i/install    -DOPENSSL_INCLUDE_DIR=${CMAKE_SOURCE_DIR}/openssl-1.1.1i/install/include     -DOPENSSL_CRYPTO_LIBRARY=../openssl-1.1.1i/install/lib/libcrypto.a    -DOPENSSL_SSL_LIBRARY=../openssl-1.1.1i/install/lib/libssl.a ..
  